// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pegasus.Database.Model;

#nullable disable

namespace Pegasus.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250716000738_AddDungeonTileId")]
    partial class AddDungeonTileId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Pegasus.Database.Model.Account", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<string>("CreateIp")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("createIp")
                        .HasDefaultValueSql("''");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("createTime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<string>("LastIp")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lastIp")
                        .HasDefaultValueSql("''");

                    b.Property<DateTime>("LastTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("lastTime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("LastTime"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password")
                        .HasDefaultValueSql("''");

                    b.Property<short>("Privileges")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint(6)")
                        .HasColumnName("privileges")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Username")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.ToTable("account", (string)null);
                });

            modelBuilder.Entity("Pegasus.Database.Model.Dungeon", b =>
                {
                    b.Property<ushort>("LandBlockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint unsigned")
                        .HasColumnName("landBlockId")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasDefaultValueSql("''");

                    b.HasKey("LandBlockId")
                        .HasName("PRIMARY");

                    b.ToTable("dungeon", (string)null);
                });

            modelBuilder.Entity("Pegasus.Database.Model.DungeonTile", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<ushort>("LandBlockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint unsigned")
                        .HasColumnName("landBlockId")
                        .HasDefaultValueSql("'0'");

                    b.Property<ushort>("TileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint unsigned")
                        .HasColumnName("tileId")
                        .HasDefaultValueSql("'0'");

                    b.Property<float>("X")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("x")
                        .HasDefaultValueSql("'0'");

                    b.Property<float>("Y")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("y")
                        .HasDefaultValueSql("'0'");

                    b.Property<float>("Z")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("z")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("Id");

                    b.HasIndex("LandBlockId")
                        .HasDatabaseName("__FK_dungeon_tile_landBlockId__dungeon_landBlockId");

                    b.ToTable("dungeon_tile", (string)null);
                });

            modelBuilder.Entity("Pegasus.Database.Model.Friend", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id")
                        .HasDefaultValueSql("'0'");

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("addTime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<uint>("Friend1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("friend")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("Id");

                    b.HasIndex("Friend1")
                        .HasDatabaseName("__FK_friend_friend__account_id");

                    b.ToTable("friend", (string)null);
                });

            modelBuilder.Entity("Pegasus.Database.Model.DungeonTile", b =>
                {
                    b.HasOne("Pegasus.Database.Model.Dungeon", "LandBlock")
                        .WithMany("DungeonTile")
                        .HasForeignKey("LandBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("__FK_dungeon_tile_landBlockId__dungeon_landBlockId");

                    b.Navigation("LandBlock");
                });

            modelBuilder.Entity("Pegasus.Database.Model.Friend", b =>
                {
                    b.HasOne("Pegasus.Database.Model.Account", "Friend1Navigation")
                        .WithMany("FriendFriend1Navigation")
                        .HasForeignKey("Friend1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("__FK_friend_friend__account_id");

                    b.HasOne("Pegasus.Database.Model.Account", "IdNavigation")
                        .WithOne("FriendIdNavigation")
                        .HasForeignKey("Pegasus.Database.Model.Friend", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("__FK_friend_id__account_id");

                    b.Navigation("Friend1Navigation");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("Pegasus.Database.Model.Account", b =>
                {
                    b.Navigation("FriendFriend1Navigation");

                    b.Navigation("FriendIdNavigation");
                });

            modelBuilder.Entity("Pegasus.Database.Model.Dungeon", b =>
                {
                    b.Navigation("DungeonTile");
                });
#pragma warning restore 612, 618
        }
    }
}
